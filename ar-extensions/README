LICENSE
----------
This is licensed under the ruby license. 

Author: Zach Dennis
Web Site: http://blogs.mktec.com/zdennis
Email: zdennis@mktec.com

 - For How-To information see http://blogs.mktec.com/pages/ARE
 - For project information and feedback please consult http://rubyforge.org/projects/arext/
 - For release information please see below

ActiveRecord::Extension 0.0.5
------------------------------
October 20th, 2006.
 - Fixes two bugs which broke normal ActiveRecord behavior
 - Fully complaint with Rails 1.1.0 thru 1.1.6 (and all ActiveRecord versions released with those)
 - Inlcudes new Rakefile
 - Includes rake task "test:mysql" which allows ActiveRecord::Extensions to be tested with mysql
 - Includes rake test "test:activerecord:mysql" which allows ActiveRecord's tests to be tested with the
   ActiveRecord::Extensions library


ActiveRecord::Extensions 0.0.4
-------------------------------
August 26th, 2006. Released at RubyConf*MI.
September 24th, 2006, Rubyforge release.
 - Inlcudes "Better Finder" support for ActiveRecord
http://blogs.mktec.com/zdennis/pages/ARE_finders


ActiveRecord::Extensions 0.0.3
-------------------------------
Released.... ????
 - the project has been named ActiveRecord::Extensions.


ActiveRecord::Optimizations 0.0.2
---------------------------------
July 20th, 11:27pm, Zach Dennis

This includes some of the optimizations for the ActiveRecord::Base. This release only supports the MysqlAdapter, although other adapters will be supported in upcoming releases.

HOW-TO USAGE
------------
Require the two files in the lib/ directory and then create records using:
  Model.create array_of_hashes

Example:
  class LogEntry < ActiveRecord::Base ; end
  LogEntry.import [ { :log_entry_name=>"Name" }, {:log_entry_name=>"Name2"}, ... ], :optimize=>true

Using the optimized create method will return the number of inserts performed, rather then an array of LogEntry objects. This currently skips model validation.


CHANGELOG
----------
0.0.2
 - add some documentation to the updated methods for ActiveRecord and MysqlAdapter
 - renamed the create optimizatin to import. Multi-value inserts can be obtained using ActiveRecord::Base.import
0.0.1
 - introduced updates to ActiveRecord::Base.create to support multi-value inserts


UPCOMING
----------
 - model validation on imports
 - postgresql support for imports
 - ability to use regular expressions for db searches
 - ability to use db functions
 - temporary table support
 - memory table support
 - complex update with on duplicate key update support

